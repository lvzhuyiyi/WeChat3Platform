<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:p="http://www.springframework.org/schema/p" xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
      http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
       http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context-3.0.xsd
         http://www.springframework.org/schema/mvc
		http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd ">
	<!-- 自动扫描controller包下的所有类，使其认为spring mvc的控制器 -->
	<!-- 加载controller的时候,不加载service,因为此时事物并未生效,若此时加载了service,那么事物无法对service进行拦截 -->
	<context:component-scan base-package="user.management.controller,web.*,weixin.*">
		<context:exclude-filter type="annotation"
			expression="org.springframework.stereotype.Service" />
	</context:component-scan>

	<!-- ApplicationContext -->
	<bean class="web.core.util.ApplicationContextUtil"></bean>

	<!-- 避免IE执行AJAX时,返回JSON出现下载文件 -->
	<bean id="mappingJacksonHttpMessageConverter"
		class="org.springframework.http.converter.json.MappingJacksonHttpMessageConverter">
		<property name="supportedMediaTypes">
			<list>
				<value>text/html;charset=UTF-8</value>
			</list>
		</property>
	</bean>
	  <bean class="org.springframework.web.servlet.mvc.annotation.DefaultAnnotationHandlerMapping" />  
	<!-- 启动Spring MVC的注解功能，完成请求和注解POJO的映射， 配置一个基于注解的定制的WebBindingInitializer，解决日期转换问题，方法级别的处理器映射 -->
	<bean
		class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter">
		<property name="cacheSeconds" value="0" />
		<!-- request 和response的消息格式转换器
		   HttpMessageConverter<T>接口负责将请求信息转换成T类型对象，将对象输出为响应信息。 -->
		<property name="messageConverters">
			<list>
				<ref bean="mappingJacksonHttpMessageConverter" /><!-- json转换器 -->
			</list>
		</property>
		<property name="webBindingInitializer">
			<bean class="web.core.interceptors.MyWebBinding" />
		</property>
	</bean>
	<!-- 默认的视图解析器 在上边的解析错误时使用 (默认使用html) 使用内部资源名来对view名进行解析,也可用bean名 - -->
	<bean 
		class="org.springframework.web.servlet.view.InternalResourceViewResolver"
		p:order="0">
		<property name="viewClass"
			value="org.springframework.web.servlet.view.JstlView" />
		<property name="contentType" value="text/html" />
		<property name="prefix" value="/webpage/" />
		<property name="suffix" value=".jsp" />
	</bean>
	<bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver"
		p:defaultEncoding="UTF-8">
		<property name="maxUploadSize">
			<value>104857600</value>
		</property>
		<property name="maxInMemorySize">
			<value>4096</value>
		</property>
	</bean>

    <!-- Bean解析器,级别高于默认解析器,寻找bean对象进行二次处理 -->
    <bean id="beanNameViewResolver"
          class="org.springframework.web.servlet.view.BeanNameViewResolver" p:order="1">
    </bean>
    
	
	<!-- 异常处理类 -->
	<bean id="exceptionHandler"
		class="web.common.exception.MyExceptionHandler" />
	<!-- 系统错误转发配置[并记录错误日志] -->
	<bean
		class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">
		<property name="defaultErrorView" value="common/error"></property>   <!-- 默认为500，系统错误(error.jsp) -->
		<property name="exceptionAttribute" value="ex"></property>  
		
		<property name="defaultStatusCode" value="404"></property>
		<property name="statusCodes"><!-- 配置多个statusCode -->
			<props>
				<prop key="error">500</prop>  <!-- error.jsp -->
				<prop key="error1">404</prop>    <!-- error1.jsp -->
			</props>
		</property>
		
		<property name="exceptionMappings">
			<props>
				<!-- 这里你可以根据需要定义N多个错误异常转发 -->
				<prop key="java.sql.SQLException">dbError</prop> <!-- 数据库错误(dbError.jsp) -->
				<prop key="org.springframework.web.bind.ServletRequestBindingException">bizError</prop> <!-- 参数绑定错误(如：必须参数没传递)(bizError.jsp) -->
				<prop key="java.lang.IllegalArgumentException">bizError</prop>  <!-- 参数错误(bizError.jsp) -->
				<prop key="org.springframework.validation.BindException">bizError</prop>  <!-- 参数类型有误(bizError.jsp) -->
				<prop key="java.lang.Exception">unknowError</prop>  <!-- 其他错误为'未定义错误'(unknowError.jsp) -->
			</props>
		</property>
	</bean>
	<!-- 拦截器 -->
	<mvc:interceptors>
		<mvc:interceptor>
		   <!-- /**的意思是所有文件夹及里面的子文件夹
                /*是所有文件夹，不含子文件夹
                /是web项目的根目录 -->
			<mvc:mapping path="/**" />
			<bean class="web.core.interceptors.EncodingInterceptor" />
		</mvc:interceptor>
		<mvc:interceptor>
			<mvc:mapping path="/**" />
			<bean class="web.core.interceptors.AuthInterceptor">
				<property name="excludeUrls">
					<list>
					    <value>coreServlet.do</value>
						<value>loginController.do?checklogin</value>
						<value>loginController.do?checkregister</value>
						<value>loginController.do?logout</value>
						<value>loginController.do?login</value>	
						<value>loginController.do?noAuth</value>										
					</list>
				</property>
				<property name="pageAuths">
					<map>				        		               
				          <entry key="jspController.do?main" value="ROLE_VIP"/>				          
				          <entry key="jspController.do?frame" value="ROLE_USER"/> 
				          <entry key="jspController.do?timeout" value="ROLE_GUEST"/> 
				          <entry key="userController.do?loadCurrentUser" value="ROLE_USER"/>
				          <entry key="userController.do?loadCurrentUserArray" value="ROLE_USER"/>
				          <entry key="userController.do?modifyUser" value="ROLE_USER"/>
				          <entry key="userController.do?addWeixin" value="ROLE_VIP"/>   
				          <entry key="userController.do?editWeixin" value="ROLE_VIP"/> 
				          <entry key="userController.do?loadWeixin" value="ROLE_VIP"/>
				           
			        </map>
				</property>
				    
			</bean>
		</mvc:interceptor>
	</mvc:interceptors>
    <!--  
    这样访问jsp是代码静态本身！
    <mvc:resources mapping="/webpage/login/**" location="/webpage/login/"/>  
   <mvc:resources mapping="/webpage/main/**" location="/webpage/main/"/>  
   <mvc:resources mapping="/webpage/common/**" location="/webpage/common/"/>  
    -->
       <!-- 处理静态资源  -->  
    <!-- 
    <bean id="simpleUrlHandlerMapping" class="org.springframework.web.servlet.handler.SimpleUrlHandlerMapping">  
        <property name="urlMap">  
            <map>       
                <entry key="/" value-ref="rootResource"/>       
            </map>  
        </property>  
    </bean>  
    <bean id="rootResource" class="org.springframework.web.servlet.resource.ResourceHttpRequestHandler">  
        <property name="locations">  
            <list>  
                <value>/webpage/login/login.jsp</value>  
            </list>  
        </property>  
    </bean>  
    <bean id="httpHandlerAdapter" class="org.springframework.web.servlet.mvc.HttpRequestHandlerAdapter" />   
     --> 
</beans>